Disclaimer
==========

These are not good general purpose sort algorithms, they have been modified to work well with displaying images (some are implemented incorrectly here, in order to depict in an image something that doesn't actually translate to a linear series of lines) Also, I can't think of any reason you wouldn't use the built in sort functions.

Description
===========

After seeing [this youtube video](http://www.youtube.com/watch?v=iXAjiDQbPSw) I realized that I had most of the knowledge necessary to do that myself. I enjoy small projects like this, so I sat down to see if I could do it with a heap sort. But I quickly became enchanted by the idea of doing merge sort too, so I added that (I think the merge sort came out the best).  By then, I had it generalized enough that adding a new sort was just a matter of modifying a small amount of code, so I added bubble sort, and then insertion sort.

To turn the array of integers that is being sorted into a graphic, I used JRuby. I tried to find a way to set large portions of my image at once, but I guess I'm just not smart enough to figure out the Java API -.^ so I draw the pictures pixel by pixel. The JRuby solution is really nice, to do a merge sort with over 1300 images at 600x400 pixels, it takes over 7 minutes, where as the ImageMagick "solution" was taking close to an hour. I think if I better understood the Java API, I could get it down considerably lower.

This is my first project I've used JRuby in, and I have to say that aside from how long it takes to load the runtime, I am really satisfied. I spent so much effort, and incurred so many liabilities trying to work around ImageMagick, that to have it run so much quicker, with so much less code is very satisfying. Interfacing with Java was very straightforward. The only potential gotcha was to convert the array to a java array. But its error messages make it clear that the Ruby versions are not equivalent, and glancing at an example quickly revealed the to_java method.

There is quite a bit of leeway regarding how to colour the images, and with a small amount of hacking, you could add flexibility for sizes as well. The images come out looking pretty similar to the ones on the video, but having them high quality, where I can pause, move forward and backward, is nice. I was able to use it to explain to my parents how all the different sorts work, and as far as I know, neither of them have ever done any programming (it is possible they were humouring me).


Usage
=====

    $ ./mergesort.rb
    $ ./to_images.rb

Then, to to view them open the images in whatever viewer you like. If you are on OSX, this is a very nice way to cycle through and analyze the output in Preview.

    $ cd results
    $ open *

To then turn them into videos, I used ffmpeg, with the following incantations

    $ ffmpeg -r 8  -f image2 -i ./results_mergesort/%05d.gif     -b 600k ./mergesort.mp4
    $ ffmpeg -r 8  -f image2 -i ./results_heapsort/%05d.gif      -b 600k ./heapsort.mp4
    $ ffmpeg -r 96 -f image2 -i ./results_bubblesort/%05d.gif    -b 600k ./bubblesort.mp4
    $ ffmpeg -r 96 -f image2 -i ./results_insertionsort/%05d.gif -b 600k ./insertionsort.mp4


Dependencies
============

* [JRuby](http://jruby.org/)
* [ffmpeg](http://www.ffmpeg.org/)

They don't say to do this on the JRuby site, but if you're on a unix based system, you can use [rvm](http://rvm.beginrescueend.com/) to install it (my preference)



---------------------------------------

**This code is unmaintained.** 

_If you do something interesting with it, let me know so I can be happy._

---------------------------------------

Copyright (c) 2010 Joshua Cheek

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
